<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:security="http://www.springframework.org/schema/security"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
            http://www.springframework.org/schema/security   
            http://www.springframework.org/schema/security/spring-security-3.2.xsd"
            default-lazy-init="true">  
      
      
    <!-- 对于静态资源路劲不做拦截 -->
	<security:http pattern="/resources/**" security="none"/>
	<security:http pattern="/login/**" security="none"/>
	<security:http pattern="/register/**" security="none"/>
    <security:http pattern="/**/*.xml" security="none"/>

	<!-- 对登录/注册！所有的用户都可以访问 -->
	<security:http pattern="/store/*.do" security="none" />
	<security:http pattern="/sysNotice/*/*.do" security="none" />
	<security:http pattern="/storeManage/freeLogin.do" security="none" />
	<security:http pattern="/app/qrcodeStatistics/*.do" security="none" />
	 
	<!--use-expressions="true" 的意思是开启表达式 access-denied-page的意思是，当验证权限失败后会跳转到的页面  -->
	<security:http  entry-point-ref="loginEntryPoint" >
		<!-- 自定义登录操作的filter -->
		<security:custom-filter ref="customLoginFilter"  position="FORM_LOGIN_FILTER" />
        <!-- 自定义登出操作的filter -->
        <security:custom-filter ref="customLogoutFilter" position="LOGOUT_FILTER" />
		<!-- 记住密码 -->
		<security:custom-filter ref="rememberMeFilter" position="REMEMBER_ME_FILTER" />
        
        <!-- sessionManager管理 -->
        <security:session-management session-authentication-strategy-ref="sas" />

        <security:intercept-url pattern="/**" access="ROLE_COMM,ROLE_VIP,ROLE_ADMIN"/>
    </security:http>  
      
    <!-- 配置一个认证管理器 -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="authenticationProvider" >
        </security:authentication-provider>
        <security:authentication-provider ref="rememberMeAuthenticationProvider"/>
    </security:authentication-manager>
    
    <bean id="loginEntryPoint"
        class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
         <!-- 默认登录页的url -->
         <constructor-arg value="/login/login.jsp"></constructor-arg>
    </bean>
    
    <!-- 管理认证 -->
    <bean id="authenticationProvider" 
        class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="mobileUserDetailService" />
<!--         显示用户错误信息 -->
        <property name="hideUserNotFoundExceptions" value="false" />
        <property name="passwordEncoder" ref="passwordEncoder" />
    </bean>
    <!-- 用户密码加密工具 -->
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
    <!-- 用户登录认证service -->
     <bean id="mobileUserDetailService" class="com.pwx.mall.disk.common.security.MobileUserDetailService"/>
     
     <bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
      	<property name="dataSource" ref="MySqlDataSource" />
   	 </bean>
     
     <bean id="customLoginFilter" class="com.pwx.mall.disk.common.security.CustomLoginFilter">
    	
    	<property name="rememberMeServices" ref="rememberMeServices"/>
        <!-- 校验登录是否有效的虚拟url -->
        <property name="filterProcessesUrl" value="/login.do" />
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="usernameParameter" value="username" />
        <property name="passwordParameter" value="password" />
        <property name="authenticationSuccessHandler">
            <!-- 自定义登录成功后的处理handler -->
            <bean class="com.pwx.mall.disk.common.security.CustomLoginHandler">
                <!-- 登录成功后的默认url -->
                <property name="defaultTargetUrl" value="/storeManage/toMenu.do" />
            </bean>
        </property>
        <property name="authenticationFailureHandler">
            <bean
                class="com.pwx.mall.disk.common.security.CustomLoginFail">
                <!-- 登录失败后的默认Url -->
                <property name="defaultFailureUrl" value="/login/login.jsp" />
            </bean>
        </property>
    </bean>
     
     <!-- 登出配置 -->
    <bean id="customLogoutFilter" class="com.pwx.mall.disk.common.security.CustomLogoutFilter">
        <!-- 处理退出的虚拟url -->
        <property name="filterProcessesUrl" value="/logout.do" />
        <!-- 退出处理成功后的默认显示url -->
        <constructor-arg index="0" value="/login/login.jsp" />
        <constructor-arg index="1">
            <!-- 退出成功后的handler列表 -->
            <array>
                <bean id="securityContextLogoutHandler"
                    class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
                <!-- 加入了开发人员自定义的退出成功处理 -->
                <bean id="customLogoutSuccessHandler" class="com.pwx.mall.disk.common.security.CustomLogoutHandler" />
            </array>
        </constructor-arg>
    </bean>
    
     
    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

	<bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<property name="maximumSessions" value="1" />
		<property name="exceptionIfMaximumExceeded" value="false" />
	</bean>
	
	<bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<property name="sessionRegistry" ref="sessionRegistry" />
		<property name="expiredUrl" value="/login/login.jsp" />
	</bean>
	
	<bean id="rememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
    	<property name="rememberMeServices" ref="rememberMeServices" />
      	<property name="authenticationManager" ref="authenticationManager" />
   	</bean>
   	
	<!-- RememberMeServices的实现 -->
	<bean id="rememberMeServices" class="com.pwx.mall.disk.common.security.MyTokenBasedRememberMeServices">
		<property name="userDetailsService" ref="mobileUserDetailService" />
		<property name="key" value="BUSINESS_UNION_KEY" />
		<!-- 指定request中包含的用户是否选择了记住我的参数名 -->
		<property name="parameter" value="BUSINESS_UNION_KEY" />
	</bean>
	
	<!-- key值需与对应的RememberMeServices保持一致 -->
	<bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<property name="key" value="BUSINESS_UNION_KEY" />
	</bean>
     
     <!-- security 错误消息国际化! -->
     <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
      	<property name="basename" value="classpath:messages_zh_CN"/>
   	</bean>
</beans>  
