<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	 <!-- 当前Spring支持注解 -->
	 <context:annotation-config/>
	 
	 <!-- 设置当前项目的根包 -->
	 <context:component-scan base-package="com.pwx.mall.disk" />
	 
	 <!-- 启用定时器 -->
	 <task:annotation-driven scheduler="myScheduler" executor="myExecutor" mode="proxy"/>  
     <task:scheduler id="myScheduler" pool-size="10"/>  
	 <task:executor id="myExecutor" pool-size="10"/>
	 
<!-- 	<context:property-placeholder location="classpath*:jdbc.properties" />
 -->	<context:property-placeholder location="classpath*:log4j.properties" />
	 
	<!-- 配置数据源  //com.mchange.v2.c3p0.ComboPooledDataSource	 init-method="init"	org.apache.commons.dbcp.BasicDataSource	-->
	<bean id="dataSourceOne" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">  
            <value>java:comp/env/jdbc/Master</value>  
        </property>
    </bean>
    
	<bean id="dataSourceTwo" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">  
            <value>java:comp/env/jdbc/Slave</value>
        </property>
	</bean>
	
	<bean id="dataSourceThree" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">  
            <value>java:comp/env/jdbc/Yun</value>
        </property>
	</bean>
	
	<bean id="dynamicDataSource" class="com.pwx.mall.disk.common.util.datasource.DynamicDataSource">  
	    <property name="targetDataSources">  
	    	<map key-type="java.lang.String">
	            <!-- 指定lookupKey和与之对应的数据源 -->
	            <entry key="dataSourceOne" value-ref="dataSourceOne"></entry>  
	            <entry key="dataSourceTwo" value-ref="dataSourceTwo"></entry>  
	            <entry key="dataSourceThree" value-ref="dataSourceThree"></entry>
	        </map>  
	    </property>  
	    <!-- 这里可以指定默认的数据源 -->
	    <property name="defaultTargetDataSource" ref="dataSourceOne" />  
	</bean>
	
	<!-- 配置session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dynamicDataSource" />
		</property>
		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<!--选择HQL解析器的实现    -->
<!-- 		    　　　　 <prop key="hibernate.query.factory_class">org.hibernate.hql.ast.ASTQueryTranslatorFactory</prop> -->
				<prop key="hibernate.query.factory_class">org.hibernate.hql.ast.ASTQueryTranslatorFactory</prop> 
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<!-- <prop key="connection.autoReconnect">true</prop>
				<prop key="connection.autoReconnectForPools">true</prop>
				<prop key="connection.is-connection-validation-required">true</prop> -->
			</props>
		</property>
		
		<property name="packagesToScan">
			<list>
				<!-- 用于试验的实体类 -->
				<value>com.pwx.mall.disk.**.entity</value>
			</list>
		</property>
	</bean>
	
	<!-- 事务管理配置  -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">  
		<property name="sessionFactory">  
			<ref local="sessionFactory" />  
		</property>  
	</bean>
	
	<!-- 基于注释的事务，当注释中发现@Transactional时，使用id为“transactionManager”的事务管理器 
	如果没有设置transaction-manager的值，则spring以缺省默认的事务管理器来处理事务，默认事务管理器为第一个加载的事务管理器-->
    <tx:annotation-driven transaction-manager="transactionManager"/> 
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="spring" class="com.pwx.mall.disk.common.util.SpringUtil" /> 
	
	 <!-- 开启aop注解	-->
    <aop:config proxy-target-class="true"/>
	<aop:aspectj-autoproxy/>
	<!-- 配置数据库注解aop -->
    <bean id="manyDataSourceAspect" class="com.pwx.mall.disk.common.util.datasource.DataSourceAspect" />
    <aop:config>
        <aop:aspect id="c" ref="manyDataSourceAspect">
        	<aop:pointcut id="tx" expression="execution(* com.pwx.mall.disk.*.dao.*.*(..))"/>
            <aop:before pointcut-ref="tx" method="before"/>
        </aop:aspect>
    </aop:config>
    <!-- 配置数据库注解aop -->
</beans>